name: Add New Member
on:
  issues:
    types: [opened]

jobs:
  add_member:
    runs-on: ubuntu-latest

    steps:
      - name: Check if Issue is for adding a member
        id: check_member
        run: |
          if [[ "${{ github.event.issue.title }}" == *"Add me to the organization"* ]]; then
            echo "add_member=true" >> $GITHUB_ENV
          else
            echo "add_member=false" >> $GITHUB_ENV
          fi

      - name: Get Pull Request Author
        id: get_author
        if: env.add_member == 'true'
        run: |
          PR_AUTHOR=$(curl -s -H "Authorization: token ${{ secrets.GITHUBTOKEN_ADDING_PPL }}" \
            "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/pulls?state=open" | jq -r '.[0].user.login')
          echo "pr_author=$PR_AUTHOR" >> $GITHUB_ENV

      - name: Debugging - Print PR Author
        if: env.add_member == 'true'
        run: echo "PR Author: ${{ env.pr_author }}"

      - name: Verify Email from PR
        id: validate_email
        if: env.add_member == 'true'
        run: |
          EMAIL=$(curl -s -H "Authorization: token ${{ secrets.GITHUBTOKEN_ADDING_PPL }}" \
            "https://raw.githubusercontent.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/main/students.md" | \
            grep -oP "(?<=IIIT Delhi Email: \[)[^\]]*(?=\])" | grep "${{ env.pr_author }}")
          echo "Extracted Email: $EMAIL"
          if [[ $EMAIL == *@iiitd.ac.in ]]; then
            echo "email_valid=true" >> $GITHUB_ENV
          else
            echo "email_valid=false" >> $GITHUB_ENV
          fi

      - name: Add Member to Organization
        if: env.email_valid == 'true'
        run: |
          curl -X PUT -H "Authorization: token ${{ secrets.GITHUBTOKEN_ADDING_PPL }}" \
            "https://api.github.com/orgs/${{ github.repository_owner }}/memberships/${{ env.pr_author }}" \
            -d '{"role":"member"}'

      - name: Comment on Issue
        if: env.email_valid == 'true'
        run: |
          COMMENT="Congratulations! Your email has been verified, and you have been added to the organization."
          ISSUE_URL=$(jq -r '.issue.url' $GITHUB_EVENT_PATH)
          curl -X POST -H "Authorization: token ${{ secrets.GITHUBTOKEN_ADDING_PPL }}" -d "{\"body\": \"$COMMENT\"}" $ISSUE_URL/comments

      - name: Comment on Invalid Email
        if: env.email_valid == 'false'
        run: |
          COMMENT="Invalid email address. Please use your IIIT Delhi email (ending with @iiitd.ac.in)."
          ISSUE_URL=$(jq -r '.issue.url' $GITHUB_EVENT_PATH)
          curl -X POST -H "Authorization: token ${{ secrets.GITHUBTOKEN_ADDING_PPL }}" -d "{\"body\": \"$COMMENT\"}" $ISSUE_URL/comments